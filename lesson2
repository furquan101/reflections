What happens when you initialize a repository? Why do you need to do it?
When you inintialise a repo a .git file is added to the directory with all the git 
files in, the user won't be able to see this

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is different from the workign directory as these files are in 
the middle between been added to the repo and being in the working directory 
they haven't been commited just yet.

How can you use the staging area to make sure you have one commit per logical
change?

You can do this by using the diff-staged command to compare the code in the 
staging area and in the commit area and see if it's a logical change 
being added

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Brances can help when you want to create new features of a game without actually 
affecting the main files. 

How do the diagrams help you visualize the branch structure?

You can see if you are working on different features, how far off the code is from the master branch
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?